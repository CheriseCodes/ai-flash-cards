# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Frontend React CI

on:
  push:
    branches: [ "frontend", "fullstack-release", "frontend-release" , "docker-cicd"]
    paths:
      - "frontend/src/**"
      - "frontend/__test__/**"
  pull_request:
    branches: [ "main" ]
    paths:
      - "frontend/src/**"
      - "frontend/__test__/**"

env:
  NODE_ENV: "dev"

defaults:
 run:
  working-directory: ./frontend

jobs:
  build-test-app:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/previous-releases/
    steps:
    - uses: actions/checkout@v3
    - uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest
    - run: bun install --frozen-lockfile
    - run: bun run build
    - run: bun run test

  build-push-docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          load: true
          tags: cherisecodes/ai-flash-cards-frontend:latest
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: CompareAndPush
        run: |
          local_image_hash=$(docker inspect --type=image cherisecodes/ai-flash-cards-frontend -f '{{index .RepoDigests 0}}' | awk '{split($0,a,"@"); print a[1]}')
          remote_image_hash=$(docker inspect --type=image docker.io/cherisecodes/ai-flash-cards-frontend -f '{{index .RepoDigests 0}}' | awk '{split($0,a,"@"); print a[1]}')
          echo $(docker inspect --type=image cherisecodes/ai-flash-cards-frontend)
          echo $local_image_hash
          echo $remote_image_hash
          if [[ "$local_image_hash" != "$remote_image_hash" ]];
          then
            docker push cherisecodes/ai-flash-cards-frontend:latest
          fi