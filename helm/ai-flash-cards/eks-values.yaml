# Default values for ai-flash-cards.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

frontend:
  image:
    registry: ""
    repository: ai-flash-cards/frontend
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: "latest"
  service:
    name: frontend-service
    type: NodePort
    targetPort: 80
    port: 80
  livenessProbe:
    httpGet:
      path: /livez
      port: 80
    initialDelaySeconds: 10
    periodSeconds: 30
    failureThreshold: 2
  readinessProbe:
    httpGet:
      path: /readyz
      port: 80
    initialDelaySeconds: 10
    periodSeconds: 30
    failureThreshold: 2
  config:
    name: frontend-config
    data:
      nodeEnv: production
  resources: {}
  volumeMounts: []
  volumes: []
  nodeSelector: {}
  tolerations: []
  affinity: {}
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
  replicaCount: 1
  podAnnotations: {}
  podLabels: {}
  podSecurityContext: {}

backend:
  image:
    registry: ""
    repository: ai-flash-cards/backend
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: "latest"
  service:
    name: backend-service
    type: NodePort
    targetPort: 8000
    port: 8000
  readinessProbe:
    httpGet:
      path: /service/readyz
      port: 8000
    initialDelaySeconds: 10
    periodSeconds: 5
    failureThreshold: 2
  livenessProbe:
    httpGet:
      path: /service/livez
      port: 8000
    initialDelaySeconds: 10
    periodSeconds: 30
    failureThreshold: 2
  config:
    name: backend-config
    data:
      awsDefaultRegion: ""
      bucketName: ""
      cloudfrontUrl: ""
      nodeEnv: production
      appEnv: kubernetes.production
  secret:
    name: api-secret
    type: Opaque
    data:
      openaiApiKey: ""
  resources: {}
  volumeMounts: []
  volumes: []
  nodeSelector: {}
  tolerations: []
  affinity: {}
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
  replicaCount: 1
  podAnnotations: {}
  podLabels: {}
  podSecurityContext: {}

ingress:
  name: main-ingress
  enabled: true
  className: alb
  annotations:
    alb.ingress.kubernetes.io/group.name: ai-flash-cards-ingress-group
    alb.ingress.kubernetes.io/load-balancer-name: ai-flash-cards-load-balancer
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: instance
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:AWS_REGION:AWS_ACCOUNT_ID:certificate/CERT_ID
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
    alb.ingress.kubernetes.io/ssl-redirect: '443'
  hosts:
  - host: YOUR_DOMAIN
    paths:
    - path: /
      pathType: Prefix
      backend:
        service:
          name: frontend-service
          port:
            number: 80
    - path: /backend/
      pathType: Prefix
      backend:
        service:
          name: backend-service
          port:
            number: 8000

service:
  type: ClusterIP
  targetPort: 80
  port: 80

replicaCount: 1

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessProbe:
  httpGet:
    path: /healthz
    containerPort: 80
readinessProbe:
  httpGet:
    path: /
    port: http

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
